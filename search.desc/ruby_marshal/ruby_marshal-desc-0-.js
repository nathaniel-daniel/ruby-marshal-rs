searchState.loadedDescShard("ruby_marshal", 0, "An Array\nAn Array\nAn error that may occur while extracting a BTreeMap from a …\nA Bool\nA bool value.\nAn already visited node was visited.\nA utility to display a byte sequence as a string if it is …\nA hash key was provided twice.\nAn instance variable was duplicated\nThere was a duplicate instance variable\nThe library error type\nA Fixnum\nThe Fixnum is not a valid usize\nA Fixnum Value\nImplemented for any type that can be created from a Ruby …\nA context to manage extracting values.\nAn error that may occur while creating a type from a Ruby …\nThe HashMap cannot be extracted since it has a default …\nThe BTreeMap cannot be extracted since it has a default …\nA hash value\nAn error that may occur while extracting a HashMap from a …\nA Hash\nImplemented for any type that can be converted into a Ruby …\nAn error that may occur while transforming types into Ruby …\nThe fixnum size is too large\nA given <code>ValueHandle</code> was invalid.\nA value handle was invalid\nAn invalid value kind was encountered\nInvalid version\nAn I/O Error\nMissing an instance variable with the given name.\nMissing an object link\nMissing a symbol link\nNil\nA Nil value.\nThe value is not an object\nAn Object\nAn object\nAnother user-provided kind of error occured.\nAnother user-provided kind of error occured.\nA String\nA String\nA Symbol\nA Symbol\nA typed version of a <code>ValueHandle</code>.\nThe usize is not a valid Fixnum\nAn object name was unexpected.\nA user defined value name was unexpected.\nAn unexpected value kind was encountered.\nUnexpected Value Kind\nAn unknown instance variable was encountered.\nA User Defined Value\nA User Defined value\nA Ruby Value\nAn arena of Ruby values.\nA handle around a Ruby Value.\nThe kind of value\nGet a ref to the <code>ObjectValue</code>, if it is an object.\nGet a ref to the <code>StringValue</code>, if it is a string.\nGet a ref to the <code>SymbolValue</code>, if it is a symbol.\nCreate an orphan <code>Array</code> value and return the handle.\nCreate an orphan <code>Bool</code> value and return the handle.\nCreate an orphan <code>Fixnum</code> value and return the handle.\nCreate an orphan <code>Hash</code> value and return the handle.\nCreate a new orphan <code>Symbol</code> value and return the handle.\nCreate an orphan <code>Nil</code> value and return the handle.\nCreate an orphan <code>Object</code> value and return the handle.\nCreate an orphan <code>String</code> value and return the handle.\nCreate an orphan <code>Symbol</code> value and return the handle.\nCreate an orphan <code>UserDefined</code> value and return the handle.\nGet the default value.\nDump to a writer.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreate this type from the given value from the <code>ValueArena</code>.\nExtract a type from a value.\nGet a reference to the <code>Value</code> denoted by the given …\nGet a reference to the <code>SymbolValue</code> denoted by the given …\nGet the instance variables\nGet the instance variables\nGet the instance variables\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the raw untyped handle.\nTurn this type into a Ruby Value.\nCheck if this is empty\nGet the kind of value.\nGet the number of elements in the array\nLoad from a reader.\nGet the name.\nGet the name.\nCreate a new context from an arena.\nMake a new empty <code>ValueArena</code>.\nShorthand for creating a new <code>Other</code> error variant.\nShorthand for creating a new <code>Other</code> error variant.\nCreate a new UnexpectedValueKind error\nReplace the current root, returning the old root.\nGet the root <code>ValueHandle</code>.\nGet the inner value\nGet the inner value\nGet the inner value.\nGet the inner value.\nGet the inner value.\nGet the inner value.\nGet the inner value.\nThe default value\nThe invalid value handle\nThe major version\nThe minor version\nThe duplicated variable\nThe already-visited node.\nThe invalid handle\nThe key that was provided twice.\nThe unexpected value kind\nThe object name.\nThe user defined name.\nThe instance variable name.\nThe instance variable name.\nThe instance variable name.\nThe current path of value handles\nThe default value")